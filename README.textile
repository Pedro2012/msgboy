h2.Developers


h3. Plugins. How they work.

When a new user comes, we see what services he/she uses and list the feeds.
The user can decide to import all feeds, or just a handful.
...

Later, when on a site with a plugin, or with the microformat that allows for subscription, we show a box to the user to ask whether he/she wants to subscribe. If it's a yes, we do subscribe. If not, we can just move on.

Listen on "click" events on any element that has the "msgboy-follow" class.
If there is a click, we use microformat to get the feed url and title and ask to the user whether he/she wants to subscribe.


h3. TODO

* -Add support for shortcuts (lots of shortcuts!)-
* -Hide bookmark abaility (but shortcut support!)-
* -Add unread count-
* -Add better excerpts (readability)-
* -Add ability to track the number of times a given feed was seen.-
* -Allow for auth with google : http://code.google.com/chrome/webstore/docs/identify_user.html- [Nope. We don't need that.]
* -show unread count as a progress bar, or as a heat indication, rather then the actual number-.
* -Add custom msgboy JS events when users subscribe-.
* Add per-site unread list
* Add snooze
* Add support for ActivityStreams, 
* Add learning features, based on clicks, shares... etc http://harthur.github.com/brain/
* When subscribing to a feed on a page, check for rel="me" links and suggest corresponding feeds if they apply.
* Rewrite the about:blank page with inbox.
* Rewrite the msgboy.com page with inbox.
* Put images in lightbox
* Make sure we use absolute hrefs -and srcs-
* Make sure we show the actual page to the feed link in "From".
* -Change the "inbox" analogy into something less stressful, as inbox feels too much like a TODO. Stream?-
* Make sure the readability script does not output any tag that conflicts with inbox tags, like h1.
* Add support for any type of url added (feed or other, then, do discovery)
* Rename "import" into suggestions.
* Use the delay@stamp for created_at of offline messages.
* Run continuous testing before running rake tasks.
* Add support for microformats for "actionable" elements/susbcribe
* Add support for events from the page to the extension, to auto-susbcribe upon user actions.
* Add the ability for a 3rd party site to ask for the list of subscriptions for a user who uses the msgboy. We want to use a system that would protect the users from having _all_ their subscriptions stolen. A solution would be to ask for subscriptions on a given domain, for example.


h3. Plugins

* Blogger
* Buzz
* Add Facebook notification feed.
* Google Groups
* Soup.io plugin

h2. Publishers

Msgboy increases loyalty and engagement of your users and visitors. They can follow pages on your site so that when you add content, they're notified. 
Here are a few tips and tricks to make it easier for people to subscribe.

# Point to a feed that includes updates in each page of your site.
    ## Put a single feed per page, corresponding to the content on that page.
    ## Make sure you use a meaningful <code>title</code> in the <code>link</code> element. Do not include RSS, or Feed, but maybe just the title of the content. "Julien's Blog" is a good example. "RSS feed" is not, as it's not meaningful for users.
    
# Setup your feeds correctly.
    ## Make sure your feed is correctly formatted, valid and easy to parse (limit to 10 entries, use unique identifiers for each entry, correctly formatted dates... etc)
    ## Implement PubSubHubbub for realtime notifications (users are notified as soon as you update the content). "Superfeedr":http://superfeedr.com/publisher can help.

# Tricks
    ## Listen to msgboy triggered events to keep track of your visitors who use msgboy, or who subscribe to your feeds. Listen to the events <code>msgboy-bookmark-loaded</code> and <code>msgboy-subscribed</code> on the body.



